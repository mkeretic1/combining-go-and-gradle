plugins {
  id "com.bmuschko.docker-remote-api" version "$dockerRemoteApiPluginVersion"
}

apply plugin: 'base'
apply plugin: 'idea'

// Import task types
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

allprojects {
  project.version = "0.1.0"

  apply plugin: "idea"

  idea {
    module {
      excludeDirs += [
        file('.gradle/'),
        file('.gogradle/'),
        file('build/'),
        file('out/'),
        file('log/'),
        file('work/'),
        file('db/')
      ]
    }
  }

}

ext {
  registryOrg="mkeretic"
  registryUrl="localhost:5050"
}

subprojects { sp ->
  apply plugin: "java"
  apply plugin: "com.bmuschko.docker-remote-api"

  targetCompatibility = JavaVersion.VERSION_11

  task copyPluginBinary(type: Copy) {
    dependsOn('goBuild')
    from "${project.buildDir}/plugin/linux-amd64"
    into "${project.buildDir}/docker/"
  }

  task copyDockerFile(type: Copy) {
    from "${projectDir}/Dockerfile"
    into "${project.buildDir}/docker/"
  }

  task buildImage(type: DockerBuildImage) {
    dependsOn(copyPluginBinary, copyDockerFile)
    images.add("${registryOrg}/${project.name}:${project.version}")
  }

  task pushImage(type: DockerPushImage) {
    dependsOn(buildImage)
    images = ["${registryUrl}/${registryOrg}/${project.name}:${project.version}"]
  }

  build.dependsOn 'buildImage'
}
